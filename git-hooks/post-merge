#!/usr/bin/env python
#
# Created by Brian Glass on Thu May  2 09:51:01 MDT 2013
# Copyright (c) 2013 Safari Books Online. All rights reserved.
#
# This script is always run from the project root

import shlex, subprocess, os
    

def popen(cmd):
    args = shlex.split(cmd)
    return subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.STDOUT).stdout

diff = popen('git diff --name-only HEAD@{1} HEAD')
changed_files = [filename.strip() for filename in diff]

if any('git-hooks' in f for f in changed_files):
    # update git hooks
    os.system('git-hooks/install-hooks')

# always delete pyc files
print 'Deleting .pyc files in project dir'
os.system("find . -name '*pyc' -delete")

virtual_env = os.environ.get('VIRTUAL_ENV')
if virtual_env:
    python = os.path.join(virtual_env, 'bin', 'python')

    # put stuff that requires virtualenv here

    # delete all .pyc files in the virtual env
    print 'Deleting .pyc files in virtualenv'
    os.system("find %s -name '*pyc' -delete" % virtual_env)

    if 'setup.py' in changed_files:
        # use pip as the installer to make sure we get all the right upgrades
        os.system('pip install -U -e ./')
    elif 'requirements.txt' in changed_files:
        # just in case we switch
        os.system("pip install -U -r requirements.txt")

    # always syncdb 
    os.system('%s manage.py syncdb --noinput' % python)

    # always update static
    print 'Running updatestatic...'
    os.system('%s manage.py updatestatic -f -v 0' % python)
